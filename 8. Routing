1. Setting
- Cài đặt 2 gói react-router và react-router-dom. Hoặc chỉ cần react-router-dom vì nó đã chứa react-router.
- Wrap everything trong app by BrowserRouter để có thể sử dụng routing
import { BrowserRouter } from 'react-router-dom'
render(
   <BrowserRouter>
      <App />
   </BrowserRouter>
  document.getElementById('app')
);

- Sử dụng bằng cách import { Route } from 'react-router-dom'
<Route path="/home" exact render={() => <h1>Home</h1>} /> //exact property để sử dụng chính xác đường dẫn trong path
                                                      //nếu ko dùng: mọi đường dẫn bắt đầu bằng '/home' như '/home/1' cũng sẽ render <h1>Home</h1>
                                                      
- Sử dụng:
<a href="/">Click here</a>
<Route path="/" exact component={Post}}

- Nó sẽ load component như render ngay tại khai báo Route này, khi chúng ta click vào "Click here"
- Nhưng href attribute trong thẻ <a> có nhiệm vụ gửi 1 request để get new page -> tức sẽ load lại all page
- Vì vậy sử dụng Link trong react-router-dom để tạo link mà ko send request
<Link to="/" exact>Home</Link>
<Link to={{
   pathname: '/new-post',
   search: '?quick-submit=true',
   hash: '#submit' //nhảy đến 1 phần trong trang
}}></Link>

- Và component được point tới sẽ có thêm properties trong props
+ history: có 1 vài method như push,...
+ location
+ match

- Nhưng những props này ko được pass xuống component con hơn nữa. Có 2 cách để pass xuống:
+ {...props}
+ sử dụng HOC component import { withRouter } from 'react-router-dom'
-> export default withRouter(App) //những component con trong App sẽ có 3 props trên


2. Path tuyệt đối (absolute) và tương đối (relative)
- Những đường dẫn như to='/' hay to='/home' là đường dẫn tuyệt đối
- Đường dẫn tuyệt đối: luôn luôn phụ thuộc vào domain
- Nếu bạn muốn xây dựng một liên kết chỉ đơn giản là nối tiếp vào đường dẫn hiện tại: -> đường dẫn tương đối
<Link to={{
   pathname: this.props.match.url + '/new-post',
}}></Link>


3. Styling the active route
- Thay thế Link bằng NavLink để có được class="active" khi link đó đang được active
- Có thể overide className active thành my-active:
<NavLink 
   to="/" exact 
   activeClassName="my-active"
   activeStyle={{       //dùng để style trực tiếp khi active
      color: '#fa934f',
      textDecoration: 'underline'
   }}
>Home</NavLink>


4. Passing Route Param //ví dụ có 1 danh sách post muốn link tới trang detai post
- Để truyền động thì ta có cú pháp
- Và để nó ở dưới cùng của route vì có thể cản trở đường dẫn như: path="/post/new-post"
<Route path="/post/:id"></Route>

- Và để 1 danh sách Post component có link router thì ta wrap nó lại
listPost.map()
<Link to={'/post' + post.id} key={post.id}>
   <Post>
      
      ...
   </Post>
</Link>
- Ở bên child component ta sẽ hứng id bằng cách:
this.props.match.params.id
